SELECT * FROM movies where year BETWEEN 2006  AND 2010
SELECT * FROM movies where id =6;
"Id Title Director Year Length_minutes
6 The Incredibles Brad Bird 2004 116"
SELECT * FROM movies where year BETWEEN 2006 and 2010
SELECT * FROM movies where year NOT BETWEEN 2006 and 2010
"SELECT title,year  FROM movies
limit 5

"
Chapter 3
SELECT * FROM movies where title LIKE "%WALL-%"
SELECT * FROM movies where director = "John Lasseter"
SELECT * FROM movies where director != "John Lasseter"
SELECT * FROM movies where title like "Toy Story%"

Chapter 4
SELECT distinct director FROM movies  order by director asc
"SELECT * FROM movies ORDER BY year desc limit 4
"
SELECT * FROM movies ORDER BY title asc limit 5
SELECT * FROM movies ORDER BY title asc limit 5 offset 5

Chapter 5
SELECT city,population FROM north_american_cities where country = "Canada"
SELECT city FROM north_american_cities where country = "United States" order by latitude asc
SELECT city FROM north_american_cities where city = "Chicago" order by longitude desc
SELECT city FROM north_american_cities where longitude < (select longitude FROM north_american_cities where city = "Chicago") order by longitude asc
SELECT city FROM north_american_cities where country ="Mexico"  order by population desc limit 2
SELECT city FROM north_american_cities where country ="United States"  order by population desc limit 2 offset 2

Chapter 6
SELECT  title, Domestic_sales,International_sales FROM movies inner join  Boxoffice on movies.id = BoxOffice.Movie_id 
SELECT  title, Domestic_sales,International_sales FROM movies inner join  Boxoffice on movies.id = BoxOffice.Movie_id where International_sales> Domestic_sales
SELECT  title, rating FROM movies inner join  Boxoffice on movies.id = BoxOffice.Movie_id order by rating desc

Chapter 7
SELECT distinct Building_name FROM buildings left join employees on buildings.Building_name = employees.Building where building is not null
SELECT  Building_name,capacity FROM buildings 
SELECT Building_name,distinct role FROM buildings,employees left join employees on buildings.building_name = employees.building;
"SELECT distinct building_name, role FROM buildings LEFT JOIN employees
    ON building_name = building;"

Chapter8
SELECT name,role FROM employees where building is null;
SELECT building_name  FROM buildings left join employees on building_name=building where building is null;

Chapter 9
"select id, title,(Domestic_sales+International_sales)/1000000  as sales from movies left join BoxOffice on movies.id = BoxOffice.movie_id 
select id, title,(Domestic_sales+International_sales)/1000000  as sales from movies left join BoxOffice on movies.id = BoxOffice.movie_id 
"
select title, (Rating*10) as percent from movies left join BoxOffice on movies.id = BoxOffice.movie_id ;
select title from movies where (year%2==0)

Chaoter 10
SELECT max(Years_employed) FROM employees;
SELECT role,avg(Years_employed) FROM employees group by role;
SELECT building, sum(years_employed) from employees
GROUP BY building;

Chapter11
SELECT role,count(*) as total FROM employees WHERE role = "Artist";
SELECT role,count(*) as total FROM employees group by role
"SELECT role,sum(years_employed) as total FROM employees where role =""Engineer"" 
"
Chapter12
SELECT title,count(*),director FROM movies group by director;
SELECT director,(Domestic_sales+International_sales) as total,count(*) FROM movies join BoxOffice  on movies.id = BoxOffice.movie_id group by director;
SELECT director,sum(Domestic_sales+International_sales) as totalSales  FROM movies join BoxOffice  on movies.id = BoxOffice.movie_id group by director;

Chapter 13
insert into movies values(15,"Toy Story 4", "Lee Unkrich",2021,120);
insert into BoxOffice values(15,8.7,340000000,270000000);

Chapter14
update movies set Director = "John Lasseter" where title ="A Bug's Life";
update movies set year = 1999 where title ="Toy Story 2";
update movies set director = "Lee Unkrich", title = "Toy Story 3" where title ="Toy Story 8";

Chapter 15
delete FROM movies where year<2005;
delete FROM movies where director= "Andrew Stanton";

Chapter 16
"create table database (
Name text primary key,
Version float,
Download_count int 
);"

chaoter17
alter table movies add Aspect_ratio float
alter table movies add Language text default "English"

chapter18
DROP TABLE IF EXISTS movies;
DROP TABLE IF EXISTS boxOffice;
